# -*- coding: utf-8 -*-
"""DomainClassifier

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RPlU0gcLhOmF3OKjNJvT3sGg6_uDZ4Bk
"""

!pip install streamlit

import streamlit as st
import nltk
from nltk.tokenize import word_tokenize
from nltk.corpus import stopwords

nltk.download('punkt')
nltk.download('stopwords')
nltk.download('punkt_tab')

DomainKey = {
    'Healthcare': ['patient', 'hospital', 'medicine', 'therapy', 'clinical', 'diagnosis', 'treatment','health','mri','diabetes','blood','healthcare'],
    'Finance': ['investment', 'stock', 'market', 'capital', 'bank', 'interest', 'loan', 'revenue','finance','economy','bullish','bearish','money',''],
    'Legal': ['court', 'law', 'contract', 'judge', 'legal', 'compliance', 'litigation', 'appeal'],
    'Sports': ['team','winner','loser','tournament','sport','score','competition','prize','trophy',''],
    'Education':['teacher','student','education','learn','cgpa','study','proffessor','lecture', 'book','']
}

def preprocess(text):
    tokens = word_tokenize(text.lower())
    stop_words = set(stopwords.words('english'))
    filtered = [word for word in tokens if word.isalpha() and word not in stop_words]
    return filtered

def classify_text(text):
    tokens = preprocess(text)
    domain_scores = {}

    for domain, keywords in DomainKey.items():
        score = sum(tokens.count(word) for word in keywords)
        domain_scores[domain] = score


    predicted_domain = max(domain_scores, key=domain_scores.get)

    if domain_scores[predicted_domain] == 0:
        return "Unknown"

    return predicted_domain

paragraph = input("Enter a paragraph of text: ")

predicted_domain = classify_text(paragraph)
print(f"The classified domain is: {predicted_domain}")

st.title("Text Domain Classifier")
st.write("Classifies a paragraph as Healthcare, Finance, Sports, Education ,or Legal based on keywords.")

user_input = st.text_area("Enter a paragraph:")
if st.button("Classify"):
    if user_input.strip():
        domain = classify_text(user_input)
        st.success(f"The classified domain is: **{domain}**")
    else:
        st.warning("Please enter some text to classify.")

